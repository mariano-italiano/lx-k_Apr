sudo apt-get update
sudo apt-get install vim 
lsmod | grep -e overlay -e br_netfilter
sudo modprobe overlay
sudo modprobe br_netfilter 
lsmod | grep -e overlay -e br_netfilter
sudo vi /etc/modules-load.d/kubernetes.conf
sysctl -a | grep ip_forward
sysctl -a | grep nf-call-ip*
sudo vi /etc/sysctl.d/99-kubernetes.conf
sudo systemctl --system 
sudo sysctl --system 
sysctl -a | grep ip_forward
sudo apt-get install -y containerd curl vim 
sudo kill -9 3374; sudo apt-get install -y containerd curl vim 
mkdir -p /etc/containerd
sudo mkdir -p /etc/containerd
sudo containerd config default | sudo tee /etc/containerd/config.toml 
sudo sed 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
sudo sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
cat /etc/containerd/config.toml | grep SystemdCgroup
sudo systemctl restart containerd
sudo systemctl status SystemdCgroup
sudo systemctl status containerd
sudo swapon -s
sudo swapoff -a
sudo swapon -s
vi /etc/fstab 
sudo vi /etc/fstab 
sudo apt-get install -y apt-transport-https 
echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
sudo apt-get update
sudo aot-cache madison kubeadm
sudo apt-cache madison kubeadm
sudo apt-get install -y kubelet=1.32.3-1.1 kubeadm=1.32.3-1.1 kubectl=1.32.3-1.1 
sudo apt-mark hold kubelet kubeadm kubectl 
sudo kubeadm init --help
ip a
sudo kubeadm init --pod-network-cidr 192.168.0.0/16 
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
kubectl get nodes
kubectl cluster-info
kubectl get pods -A
CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt)
CLI_ARCH=amd64
if [ "$(uname -m)" = "aarch64" ]; then CLI_ARCH=arm64; fi
curl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
sha256sum --check cilium-linux-${CLI_ARCH}.tar.gz.sha256sum
sudo tar xzvfC cilium-linux-${CLI_ARCH}.tar.gz /usr/local/bin
rm cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
cilium install 
watch -n1 kubectl get pod -A
kubectl get nodes
sudo kubeadm token create --print-join-command
kubectl get nodes
watch -n1 kubectl get pods -A
watch -n1 kubectl get pods -A -o wide
kubectl get nodes
sudo apt-get install bash-completion
echo 'source <(kubectl completion bash)' >>~/.bashrc
source ~/.bashrc
kubectl get nodes
kubectl get ns
kubectl get namespaces 
kubectl api-resources 
kubectl get all -n cilium-secrets
kubectl get ns
kubectl get all -n kube-system
kubectl create ns test-ns
kubectl get ns
kubectl edit ns test-ns 
kubectl get ns
kubectl describe ns test-ns 
kubectl get ns test-ns -o yaml
git clone https://github.com/mariano-italiano/lx-k_Apr.git
sudo apt-get install git -y
git config --global credential.helper store
git clone https://github.com/mariano-italiano/lx-k_Apr.git
cd lx-k_Apr/
ls -la
mkdir day1
cd day1/
ls -la
vi first-pod.yaml
kubectl apply -f first-pod.yaml 
vi first-pod.yaml
kubectl apply -f first-pod.yaml 
kubectl get pod
kubectl get pod -n default 
kubectl get pod -n test-ns 
vi first-pod.yaml 
kubectl apply -f first-pod.yaml 
kubectl apply -f first-pod.yaml -n kube-system 
kubectl get po -A 
kubectl describe pod first-pod 
kubectl get pod
kubectl logs first-pod  
kubectl logs first-pod --all-containers 
vi test-pod.yaml
kubectl create -f test-pod.yaml 
kubectl get pod
kubectl delete -f test-pod.yaml 
vi test-pod.yaml
kubectl apply -f test-pod.yaml
kubectl get pod
vi test-pod.yaml 
kubectl get pod
kubectl replace --force -f test-pod.yaml
kubectl get pod
kubectl logs test-pod 
kubectl get pod
kubectl describe po test-pod 
vi test-pod.yaml 
kubectl apply -f test-pod.yaml
kubectl describe po test-pod 
vi test-pod.yaml 
kubectl apply -f test-pod.yaml
vi test-pod.yaml 
kubectl apply -f test-pod.yaml
kubectl run mk-test --image marcinkujawski/python-api:1.0 --labels app: mk-test -o yaml --dry-run=client 
kubectl run mk-test --image marcinkujawski/python-api:1.0 --labels app=mk-test -o yaml --dry-run=client 
kubectl run mk-test --image marcinkujawski/python-api:1.0 --labels app=mk-test -o yaml --dry-run=client  > mk-test.yaml
vi mk-test.yaml
kubectl apply -f mk-test.yaml
kubectl run mk-test --image marcinkujawski/python-api:1.0 --labels app=mk-test -o yaml --dry-run=client
kubectl run mk-test --image marcinkujawski/python-api:1.0 --labels app=mk-test -o yaml --dry-run=server
kubectl get pod -o wide
kubectl get pod --show-labels 
kubectl get pod --show-labels -o wide
kubectl run test-pod2 --image nginx --labels app=test 
kubectl get pod --show-labels -o wide
kubectl get pod --show-labels --selector app
kubectl get pod --show-labels --selector app=test
kubectl get pod --show-labels --selector app=test --all-namespaces 
kubectl run test-pod2 --image nginx --labels app=test -n test-ns 
kubectl get pod --show-labels --selector app=test --all-namespaces 
kubectl get pod --show-labels --selector app --all-namespaces 
kubectl get pod --show-labels -n kube-system
kubectl get pod --show-labels -n kube-system -l tier=control-plane
kubectl get pod --show-labels -n kube-system -l 'tier in(control-plane)'
kubectl get pod --show-labels -n kube-system -l 'tier in(control-plane),component notint(etcd)'
kubectl get pod --show-labels -n kube-system -l 'tier in(control-plane),component notin(etcd)'
git pull
git status
cd ..
git status
git add .
git commit -m "adding day1 files"
git push
git config --global user.email "markuj5@gmail.com"
git commit -m "adding day1 files"
git push
history
history | awk '$1 > 4' | cut -c 8- day1-history.txt
history | awk '$1 > 4' | cut -c 8- > day1-history.txt
